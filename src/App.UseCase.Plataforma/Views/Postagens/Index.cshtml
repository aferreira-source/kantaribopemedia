@{
    ViewData["Title"] = "Portal de notícias";
}
<h1>@ViewData["Title"]</h1>

<style>

    .fixed-size-div {
        height: 400px;
        overflow-y: auto;
    }

</style>

<link href="~/css/chatcss.css" rel="stylesheet" />


<div class="row ">
    <div class="col-12 card card-body">
        <div class="d-flex mx-auto">Seu Id:&nbsp;<p id="IdUser"></p></div>
        <ul id="usersdata" class="list-group">
            <li class="list-group-item">Usuarios Online</li>
            <li class="list-group-item usuarios" data-cid="" data-username="">
                @* <a href="#">
                <div class="username"></div>
                </a>*@
            </li>
        </ul>
        <div class="row g-3 align-items-center mx-auto mt-2">
            <div class="col-auto">
                <label for="inputPassword6" class="col-form-label">Digite o Id da pessoa pra ligar</label>
            </div>
            <div class="col-auto">
                <input type="text" id="inputIdLigar" class="form-control" aria-describedby="passwordHelpInline">
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-primary" id="BtnLigar">Ligar</button>
            </div>

        </div>
    </div>
</div>
<div class="row  align-items-center">
    <div class="col-lg-6 col-md-12 col-sm-12">
        Você
        <div class="card card-body bg-light m-2 ">
            <video id="localVideo" class="small-video" controls playsinline autoplay muted>

                Seu navegador não suporta a tag de vídeo.
            </video>
        </div>
    </div>
    <div class="col-lg-6 col-md-12 col-sm-12">
        Servidor
        <div class="card card-body bg-light m-2 ">
            <video id="remoteVideo" class="large-video" controls playsinline autoplay>

                Seu navegador não suporta a tag de vídeo.
            </video>
        </div>
    </div>


</div>


<h3>Arquivos recebidos</h3>
<table id="fileTable" class="fileTable table">
    <thead>
        <tr>
            <th>Nome do arquivo</th>
            <th>Arquivo </th>
            <th>Hora Recebida</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>


<main class="content" id="divChat">



    <div class="row ">
        <div class="col-lg-6 col-md-12 col-sm-12">
            <form class="input-group  mb-3" id="file-upload-form">
                <input name="pdfFile" type="file" class="form-control" id="inputGroupFile02">
                <button type="submit" class="input-group-text" for="cbcvb">Enviar</button>
            </form>
        </div>
    </div>
    <div class="container p-0">

        <h1 class="h3 mb-3">Messages</h1>

        <div class="card">
            <div class="row g-0">

                <div class="col-12 ">
                    <div class=" border-bottom flex-grow-0 py-3 px-4 border-top">
                        <div class="d-flex align-items-center py-1">
                            <div class="position-relative">
                                <img src="https://bootdey.com/img/Content/avatar/avatar3.png" class="rounded-circle mr-1" alt="Sharon Lessman" width="40" height="40">
                            </div>
                            <div class="flex-grow-1 pl-3">
                                <strong>Sharon Lessman</strong>
                                <div class="text-muted small"><em>Typing...</em></div>
                            </div>
                            <div>
                                <button class="btn btn-primary btn-lg d-none mr-1 px-3"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-phone feather-lg"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path></svg></button>
                                <button onclick="setCallState()" class="btn btn-info btn-lg mr-1 px-3  d-md-inline-block" id="ButtomPause"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-video feather-lg"><polygon points="23 7 16 12 23 17 23 7"></polygon><rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect></svg></button>

                                <button class="btn btn-light border btn-lg px-3"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-horizontal feather-lg"><circle cx="12" cy="12" r="1"></circle><circle cx="19" cy="12" r="1"></circle><circle cx="5" cy="12" r="1"></circle></svg></button>
                            </div>
                        </div>
                    </div>

                    <div class="position-relative">
                        <div class="chat-messages p-4" id="Chatmesseger">                       


                        </div>
                    </div>

                    <form class="flex-grow-0 py-3 px-4 border-top" id="formchjat">
                        <div class="input-group">
                            <input type="text" id="ChatConversa" class="form-control" placeholder="Type your message">
                            <button class="btn btn-primary">Send</button>
                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>
</main>



@*modal de resposta de ligação*@
<div class="modal fade" id="callmodal" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="callmodaltitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="callmodaltitle">Olá</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="declineCall()" data-dismiss="modal">Decline</button>
                <button type="button" class="btn btn-primary" onclick="acceptCall()">Accept</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{

    <script src="~/js/variaveis.js"></script>
    <script>
        'use strict';


        var hubUrl = document.location.origin + '/cnnctn';
        var wsconn = new signalR.HubConnectionBuilder()
            .withUrl(hubUrl, signalR.HttpTransportType.WebSockets)
            .configureLogging(signalR.LogLevel.Debug)
            .build();

        //  varwsconn = new signalR.HubConnectionBuilder().withUrl(hubUrl).build();

        var IdConecçao = null

        //var peerConnectionConfig = {
        //    iceServers: [
        //        {
        //            urls: "turn:10.0.0.1:3478",
        //            username: "w2e",
        //            credential: "12345"
        //        }
        //    ]
        //};
        var peerConnection = null //instancia o webRTC
        var users = [], localStream, connections = {};
        var user = null;
        var caller = null;


        $(document).ready(function () {



            wsconn.start().then(() => {
                askUsername()
                initializeUserMedia() // ligo a cam
                IdConecçao = wsconn.connection.connectionId
                console.info(`Connected as ${user}`);


            }).catch(err => console.error(err));

            wsconn.on('AttUsuariosOnline', (userList) => {
                console.info('Check online users...' + JSON.stringify(userList));
                users = userList;

                $('#usersdata li.usuarios').remove();

                $.each(userList, function (index) {
                    var userIcon = '', status = '';
                    if (userList[index].username === $("#lblUser").text()) {

                    } else {


                        if (userList[index].username !== user) {
                            var onlineUsers = '';
                            onlineUsers += '<li class="list-group-item usuarios" data-cid=' + userList[index].connectionId + ' data-username=' + userList[index].username + '>';
                            onlineUsers += '<div class="d-lg-flex flex-row">';
                            onlineUsers += '<div class="m-1 d-lg-flex justify-content-center align-items-center"><small>' + userList[index].connectionId + '</small>(' + userList[index].username + ')</div>';
                            onlineUsers += '<div class="d-flex flex-row justify-content-center align-items-center">';
                            onlineUsers += '<div class="m-1 d-lg-flex justify-content-center align-items-center"><span data-callstatus=' + userList[index].inCall + '>' + ((userList[index].inCall == true) ? '<small>(Ocupado)</small>' : '<small>(Disponivel)</small>') + '</span></div>';
                            onlineUsers += '<div class="m-2"><button id="btnCallUser" type="button" class="btn btn-primary btn-sm" ' + ((userList[index].inCall == true) ? 'disabled' : '') + ' onclick="callUser(\'' + userList[index].connectionId + '\')">Ligar</button></div>';
                            onlineUsers += '<div class="m-2"><button id="btnEndCall" type="button" class="btn btn-primary btn-sm" ' + ((userList[index].inCall == true) ? '' : 'disabled') + ' onclick="endCall(\'' + userList[index].connectionId + '\')">Desligar</button></div>';
                            onlineUsers += '</div>';

                            onlineUsers += '</div></li>';

                            $('#usersdata').append(onlineUsers);
                        }

                    }
                });


                var usuario = users.find(u => u.username == user)
                if (usuario.inCall == false) {
                    limparChat();
                }




            });


            wsconn.on('receivedatamsg', (signalingUser, data) => {
                var horaAtual = new Date().toLocaleTimeString();

                var msg = data.replace(/&/g, "&").replace(/</g, "<").replace(/>/g, ">");


                var msgem = `
                                                                                                            <div class="chat-message-left pb-4 chatHub">
                                                                                    <div>
                                                                                        <img src="https://bootdey.com/img/Content/avatar/avatar3.png" class="rounded-circle mr-1" alt="Sharon Lessman" width="40" height="40">
                                                                                        <div class="text-muted small text-nowrap mt-2">${horaAtual}</div>
                                                                                    </div>
                                                                                    <div class="flex-shrink-1 bg-light rounded py-2 px-3 ml-3">
                                                                                        <div class="font-weight-bold mb-1">Sharon Lessman</div>
                                                                                               ${msg}
                                                                                    </div>
                                                                                </div>
                                                                                                    `

                $("#Chatmesseger").append(msgem);
                scrollToBottom('Chatmesseger')

            }
            )

            wsconn.on('LidacaoNegada', (callingUser, msg) => {
                console.info('Ligação negada: ' + JSON.stringify(callingUser));
                playAudio("MyAudio", 'stop')
                playAudio("AudioReceive", 'stop')
                alert("Ligação negada: " + msg)
            });

            // onde dispara a ligação recebida e salvo o user na variavel "caller"
            wsconn.on('ChamadaRecebida', (callingUser) => {
                console.info('Chamada Recebida de: ' + JSON.stringify(callingUser));
                caller = callingUser;
                acceptCall();
                // playAudio("AudioReceive", 'play')
                // $('#callmodal').attr('data-callinguser', `${callingUser.username}`);
                // $('#callmodal .modal-body').text(`${callingUser.username} Está ligando...`);
                // $('#callmodal').modal('show');
            });



            wsconn.on('LigaCaoAceita', (acceptingUser) => {
                playAudio("MyAudio", 'stop')
                playAudio("AudioReceive", 'stop')
                $('#divChat').show()

                caller = acceptingUser;


                console.info('Ligação aceita ' + JSON.stringify(acceptingUser) + '.');


            });

            wsconn.on('LigacaoDesligada', (acceptingUser) => {
                playAudio("MyAudio", 'stop')
                playAudio("AudioReceive", 'stop')
                closeConnection(caller.connectionId);


            });


            $('#BtnLigar').on('click', () => {
                let id = $('#inputIdLigar').val()

                if (!id) {
                    SweetAlerta.fire({
                        title: 'Coloque o ID',
                        text: "Não colocou o id de quem vai ligar",
                        icon: 'warning',
                        showCancelButton: false,
                        confirmButtonText: 'Entendi',
                        cancelButtonText: 'No, cancel!',
                        reverseButtons: true
                    })

                }
                else {
                    callUser(id)
                }


            }) // metodo de ligar pelo butom

            wsconn.on("ReceberMensagem", function (mensagem) {
                alert(`Mensagem recebida: ${mensagem}`)
            })

            $("#formchjat").on("submit", (event) => {

                var valueMsg = $("#ChatConversa").val();
                var horaAtual = new Date().toLocaleTimeString();
                var mensagem = `   <div class="chat-message-right pb-4 chatHub">
                                                                                <div>
                                                                                    <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle mr-1" alt="Chris Wood" width="40" height="40">
                                                                                    <div class="text-muted small text-nowrap mt-2">${horaAtual}</div>
                                                                                </div>
                                                                                <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                                                                                    <div class="font-weight-bold mb-1">You</div>
                                                                                           ${valueMsg}
                                                                                </div>
                                                                            </div>


                                                                                            `



                $("#Chatmesseger").append(mensagem);
                scrollToBottom('Chatmesseger')

                $('#formchjat').each(function () {
                    this.reset();
                });

                wsconn.invoke("senddatamsg", valueMsg, caller.connectionId).catch(function (err) {
                    return console.error(err.toString());
                });
                event.preventDefault();
            });



            $("#file-upload-form").submit(function (event) {
                event.preventDefault();

                var formData = new FormData($(this)[0]);
                var file = formData.get("pdfFile");

                if (file.size === 0) {
                    alert('File is empty, please select a non-empty file.');
                    return;
                }

                //send file size and file name as comma separated value.
                dataChannel.send(file.size + ',' + file.name);

                const chunkSize = 16384;
                fileReader = new FileReader();
                let offset = 0;
                fileReader.addEventListener('error', error => console.error('Error reading file:', error));
                fileReader.addEventListener('abort', event => console.log('File reading aborted:', event));
                fileReader.addEventListener('load', e => {
                    console.log('FileRead.onload ', e);
                    dataChannel.send(e.target.result);
                    offset += e.target.result.byteLength;
                    if (offset < file.size) {
                        readSlice(offset);
                    } else {
                        alert(`${file.name} Arquivo enviado com sucesso.`);

                    }
                });
                const readSlice = o => {
                    console.log('readSlice ', o);
                    const slice = file.slice(offset, o + chunkSize);
                    fileReader.readAsArrayBuffer(slice);
                };
                readSlice(0);

                $('#file-upload-form').each(function () {
                    this.reset();
                });


            });







        })// final document ready




    </script>

    <script src="~/js/javascriptbasico.js"></script>
    <script src="~/js/funcoeswebrtc.js"></script>
}

