<style>

    .fixed-size-div {
        height: 100px;
        overflow-y: auto;
    }

</style>

<link href="~/css/chatcss.css" rel="stylesheet" />

<div class="container">


    <div class="row " id="DivWithID">
        <div class="col-12 card card-body text-center">
            <div class="d-flex justify-content-center align-items-center mx-auto card card-body w-50">
                <strong>Seu Link da Sala:</strong>&nbsp;<a class="p-2 form-control" id="IdUser"></a>
                <button id="CopyTextBTN" class=" btn btn-outline-success mt-2" data-clipboard-target="#IdUser">Copiar texto</button>
            </div>
        </div>
    </div>




    <div class="row">
        <div class="col-sm-8">

            <div class="card card-body bg-light m-2 ">
                <video id="gum" class="small-video" controls playsinline autoplay muted>

                    Seu navegador não suporta a tag de vídeo.
                </video>
            </div>
            <div class="m-2">
                @* <button id="start">Start camera</button> *@
                <button id="record" class="btn btn-dark">Iniciar</button>
                @*                 <button id="play" disabled>Play</button> *@
                <button id="publicar" disabled class="btn btn-dark">Publicar</button>
            </div>
            <div class="d-flex mx-auto">Seu Id:&nbsp;<p id="IdUser"></p></div>
            <div class="d-flex mx-auto">Seu Id:&nbsp;<p id="lblUser"></p></div>
            
            @*
                
            <video id="gum" playsinline autoplay muted></video> *@
            <div style="display:none">
                <video id="recorded" style="display:none" playsinline loop></video>

                <div>
                    Recording format: <select id="codecPreferences" disabled></select>
                </div>

                <div>
                    <h4>Media Stream Constraints options</h4>
                    <p>Echo cancellation: <input type="checkbox" id="echoCancellation"></p>
                </div>

                <div class="d-flex mx-auto">Seu Id:&nbsp;<p id="IdUser"></p></div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="card card-body bg-light">
                <ul id="usersdata" class="list-group fixed-size-div">
                    <li class="list-group-item">Usuarios Online</li>
                </ul>
                </<div>
                </div>
            </div>               

        </div>
   </div>



@section Scripts
{

    <script src="~/js/FuncoesHub.js"></script>

    <script src="~/js/video/funcoes-rtc.js"></script>
 
    <script src="~/js/video/video.js"></script>
  
    <script>
        'use strict';     
 
        const conectParceiro = '@Html.Raw(ViewBag.ConectId)';

        var hubUrl = document.location.origin + '/video';
        var hubConnection = new signalR.HubConnectionBuilder()
            .withUrl(hubUrl, signalR.HttpTransportType.WebSockets)
            .configureLogging(signalR.LogLevel.Debug)
            .build();

 
        var IdConexao = null

        var peerConnectionConfig = { "iceServers": [{ "url": "stun:stun.l.google.com:19302" }] };

        var peerConnection = null //instancia o webRTC
        var users = [], localStream, connections = {};
        var user = null;
        var caller = null;


        $(document).ready(function () {                             


            var clipboard = new ClipboardJS(CopyTextBTN);

            clipboard.on('success', function (e) {
                console.info('Action:', e.action);
                console.info('Text:', e.text);
                console.info('Trigger:', e.trigger);
            });
           

            hubConnection.start().then(() => {        
           

                //askUsername();
                userJoin();
                
                initializeUserMedia(); // ligo a cam

                IdConexao = hubConnection.connection.connectionId
                $("#IdUser").text(document.location.origin + "@Url.Action("Video", "Postagens")?ConectId=" +IdConexao);

               
                Chamada();
                //console.info(`Connected as ${user}`);
                
               // console.info(`user.askUsername: ${user.askUsername}`);
                //$("#lblUser").value(user.askUsername);

            }).catch(err => console.error(err));            

            
            hubConnection.on('AttUsuariosOnline', (userList) => {
               
             
                console.info('Check online users...' + JSON.stringify(userList));
                users = userList;

                $('#usersdata li.usuarios').remove();

                $.each(userList, function (index) {

                    

                    var userIcon = '', status = '';
                            //alert('meu ' + userList[index].username + ' ' + hubConnection.connection.connectionId);

                    // if (userList[index].username === $("#lblUser").text()) {
                    if (userList[index].connectionId === hubConnection.connection.connectionId) {
                        //Fazer algo

                    } else {


                        if (userList[index].username !== user) {
                       
                            var onlineUsers = '';
                            onlineUsers += '<li class="list-group-item usuarios" data-username=' + userList[index].username + '>';
                            onlineUsers += '<div class="d-lg-flex flex-row">';
                            onlineUsers += '<div class="m-1 d-lg-flex justify-content-center align-items-center">' + userList[index].username + '</div>';
                            onlineUsers += '<div class="d-flex flex-row justify-content-center align-items-center">';
                            onlineUsers += '</div>';

                            onlineUsers += '</div></li>';

                            $('#usersdata').append(onlineUsers);
                        }

                    }
                });
               
            });


            function Chamada() {
                if (conectParceiro) {

                    $('#DivWithID').hide()
                    
                    //BlockUi()
                    const EntrarNaSala = setTimeout(function () {
                        // enviar dados via SignalR
                        ///alert('entrei'); metodos associados
                        let conectar = { "connectionId": conectParceiro };
                        callUser(conectParceiro)
                    }, 1000)

                }
            }



            hubConnection.on('receivedatamsg', (signalingUser, data) => {
                var horaAtual = new Date().toLocaleTimeString();

                var msg = data.replace(/&/g, "&").replace(/</g, "<").replace(/>/g, ">");


                var msgem = `
                                                        <div class="chat-message-left pb-4 chatHub">
                                <div>
                                    <img src="https://bootdey.com/img/Content/avatar/avatar3.png" class="rounded-circle mr-1" alt="Sharon Lessman" width="40" height="40">
                                    <div class="text-muted small text-nowrap mt-2">${horaAtual}</div>
                                </div>
                                <div class="flex-shrink-1 bg-light rounded py-2 px-3 ml-3">
                                    <div class="font-weight-bold mb-1">Sharon Lessman</div>
                                            ${msg}
                                </div>
                            </div>
                                                `

                $("#Chatmesseger").append(msgem);
                scrollToBottom('Chatmesseger')

            }
            )

            hubConnection.on('LidacaoNegada', (callingUser, msg) => {
                console.info('Ligação negada: ' + JSON.stringify(callingUser));
                playAudio("MyAudio", 'stop')
                playAudio("AudioReceive", 'stop')
                alert("Ligação negada: " + msg)
            });

            // onde dispara a ligação recebida e salvo o user na variavel "caller"
            hubConnection.on('ChamadaRecebida', (callingUser) => {
                console.info('Chamada Recebida de: ' + JSON.stringify(callingUser));
                caller = callingUser;

                playAudio("AudioReceive", 'play')
                $('#callmodal').attr('data-callinguser', `${callingUser.username}`);
                $('#callmodal .modal-body').text(`${callingUser.username} Está ligando...`);
                $('#callmodal').modal('show');
                //acceptCall();
            });



            hubConnection.on('LigacaoDesligada', (acceptingUser) => {
                playAudio("MyAudio", 'stop')
                playAudio("AudioReceive", 'stop')
                closeConnection(caller.connectionId);
            });    


       
        })// final document ready

    </script>

}
